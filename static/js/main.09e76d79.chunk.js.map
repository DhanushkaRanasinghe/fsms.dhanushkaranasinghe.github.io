{"version":3,"sources":["redux/actionTypes.js","redux/reducer/userReducer.js","redux/reducer/postsReducer.js","redux/rootReducer.js","redux/store.js","Media/logo.png","components/Header/Header.js","Media/nofoodwaste.png","Media/about_us_img.jpg","Media/helpingHands.jpg","Media/mission.jpg","Media/contact.png","Media/meWink.png","components/Home/Home.js","Pages/Register/Register.js","components/Post/Post.js","Pages/Dashboard/Dashboard.js","Media/Avatarimg.png","Pages/Account/Account.js","auth.js","Pages/Donate/Donate.js","Pages/Maps/Maps.js","Pages/Main.js","redux/actions/userAction.js","redux/actions/postsAction.js","App.js","reportWebVitals.js","index.js"],"names":["LOAD_USER","LOGIN_USER","SIGNUP_USER","CREATE_POST","DELETE_POST","UPDATE_POST","LOGOUT_USER","LOAD_POSTS","ERROR","UP_VOTE","UPDATE_USER","intiState","user","loading","error","userReducer","state","action","type","payload","initState","posts","postReducer","filter","post","_id","rpost","postId","splice","indexOf","points","includes","currentUserId","p","push","rootReducer","combineReducers","store","createStore","compose","applyMiddleware","thunk","Header","props","history","useHistory","useState","open","setOpen","React","open1","setOpen1","handleClickOpen","localStorage","getItem","replace","handleClose","className","src","logo","alt","style","textDecoration","to","onClick","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","color","removeItem","LogoutUser","autoFocus","Home","first_name","setFirst_name","full_name","setFull_name","desc","setDesc","event","reason","first_name_ref","useRef","full_name_ref","desc_ref","snackRef","btnRef","nofoodwaste","data-aos","aboutUsImg","helpingHands","mission","onSubmit","e","preventDefault","trim","length","current","border","innerHTML","Axios","frommail","password","tomail","Subject","Body","then","response","data","msg","display","setTimeout","ref","value","onChange","target","required","resize","maxHeight","minHeight","rows","textAlign","backgroundColor","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","Fragment","size","IconButton","aria-label","fontSize","meWink","Register","signInpanelOpened","setSignInpanelOpened","email","setEmail","setPassword","remail","setrEmail","rpassword","setrPassword","rname","setrName","setLoading","signInUser","a","Data","LoginUser","LoadUser","console","log","LoadPosts","signUpUser","name","signupUser","href","placeholder","Backdrop","zIndex","CircularProgress","AutoPlaySwipeableViews","autoPlay","SwipeableViews","Post","buttonText","setButtonText","activeStep","setactiveStep","format","createdAt","postedBy","image","description","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","fooditems","map","row","index","Date","parse","updatedAt","parseInt","spoil_in_hrs","getTime","item_name","availability","Math","floor","Bio_Gas","Food_Donate","address","any_other","myPosts","DeletePost","upVote","currentUser","fromPost","lat","lon","images","axis","onChangeIndex","step","enableMouseEvents","overflow","width","height","abs","objectFit","Dashboard","anchorRef","sortbyloc","setsortbyloc","inputval","setinputval","setfilter","latitude","longitude","userCurrentlocation","setuserCurrentlocation","contains","handleListKeyDown","key","prevOpen","useEffect","focus","navigator","geolocation","getCurrentPosition","position","coords","err","setCurrentFilter","fil","marginTop","marginLeft","sort","b","x1","y1","x2","y2","x3","y3","sqrt","allitems","item","toString","postid","data-aos-delay","Popper","anchorEl","role","undefined","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","MenuItem","Transition","forwardRef","Slide","direction","Account","setImage","nameError","setNameError","snackOpen","setSnackOpen","snackText","setSnackText","valid","setValid","setName","imgChange","setImageChange","title","reduce","c","d","elevation","username","maxWidth","margin","TransitionComponent","keepMounted","FormData","append","fetch","method","body","res","json","secure_url","updateProfile","padding","opacity","paddingLeft","files","cursor","URL","createObjectURL","uploadImageURL","TextField","helperText","label","fullWidth","variant","Auth","token","login","children","tableIcons","Add","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","AddProduct","setState","handleInputChange","removeImage","startsWith","deleteImage","eraserData","y","Description","checkValidation","val","snakbarmessage","savePostData","sdata","location","UpdatePost","CreatePosts","snakbar","columns","field","Box","bgcolor","boxShadow","Typography","gutterBottom","flexWrap","this","accept","hidden","htmlFor","icons","options","search","paging","editable","onRowAdd","newData","Promise","resolve","reject","onRowUpdate","oldData","dataUpdate","tableData","onRowDelete","dataDelete","Component","withRouter","Maps","inputRef","useLocation","zoom","viewport","setViewport","foodItems","setfoodItems","searchedvalue","setsearchedvalue","currentState","setcurrentState","foodList","postob","handleMarkerClick","food","foods","mapStyle","mapboxApiAccessToken","onViewportChange","nextViewport","transitionDuration","offsetLeft","offsetTop","font","i","closeButton","anchor","connect","dispatch","onSuccess","getstate","axios","put","headers","updatedUser","getState","get","delete","status","setItem","pi","imgUrls","String","data1","data2","url","upload","fulladdress","getLatLangFromAddress","latLng","results","locations","lng","path","exact","App","AOS","init","easing","duration","offset","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09e76d79.chunk.js","sourcesContent":["export const LOAD_USER = \"LOAD_USER\";\r\nexport const LOGIN_USER = \"LOGIN_USER\";\r\nexport const SIGNUP_USER = \"SIGNUP_USER\";\r\nexport const CREATE_POST = \"CREATE_POST\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\nexport const UPDATE_POST = \"UPDATE_POST\";\r\nexport const LOGOUT_USER = \"LOGOUT_USER\";\r\nexport const LOAD_POSTS = \"LOAD_POSTS\";\r\nexport const ERROR = \"ERROR\";\r\nexport const UP_VOTE = \"UP_VOTE\";\r\nexport const UPDATE_USER = \"UPDATE_USER\";","import {\r\n    LOAD_USER,\r\n    LOGIN_USER,\r\n    SIGNUP_USER,\r\n    LOGOUT_USER,\r\n    ERROR,\r\n    UP_VOTE,\r\n    UPDATE_USER\r\n} from '../actionTypes';\r\n\r\nlet intiState = {\r\n    user: null,\r\n    loading: true,\r\n    error: null\r\n}\r\n\r\nconst userReducer = (state = intiState, action) => {\r\n    switch (action.type) {\r\n        case LOAD_USER:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                loading: false,\r\n            };\r\n        case SIGNUP_USER:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                loading: false,\r\n            };\r\n        case LOGIN_USER:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                loading: false,\r\n            };\r\n        case LOGOUT_USER:\r\n            return {\r\n                ...state,\r\n                user: null,\r\n                loading: false\r\n            };\r\n        case UPDATE_USER:\r\n            state.user = action.payload;\r\n            return {\r\n                ...state\r\n            }\r\n        // case UP_VOTE:\r\n        //     if (state.user.points.includes(action.payload)) {\r\n        //         state.user.points = state.user.points.filter(userid => userid !== action.payload);\r\n        //     }\r\n        //     else {\r\n        //         state.user.points.push(action.payload);\r\n        //     }\r\n        //     return {\r\n        //         ...state,\r\n        //     }\r\n        case ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userReducer","import {\r\n    CREATE_POST,\r\n    LOAD_POSTS,\r\n    UPDATE_POST,\r\n    DELETE_POST,\r\n    ERROR,\r\n    UP_VOTE\r\n} from '../actionTypes';\r\n\r\nlet initState = {\r\n    posts: [],\r\n    loading: true,\r\n    error: null,\r\n}\r\n\r\nconst postReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case LOAD_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: action.payload,\r\n                loading: false,\r\n                error: null\r\n            };\r\n        case CREATE_POST:\r\n            return {\r\n                ...state,\r\n                posts: [action.payload, ...state.posts],\r\n                loading: false,\r\n                error: null\r\n            };\r\n        case UPDATE_POST:\r\n            return {\r\n                ...state,\r\n                posts: [action.payload, ...state.posts.filter((post) => post._id !== action.payload._id)],\r\n                loading: false,\r\n                error: null\r\n\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter((post) => post._id !== action.payload._id),\r\n                loading: false,\r\n                error: null\r\n            };\r\n        case ERROR:\r\n            return {\r\n                ...state,\r\n                posts: null,\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case UP_VOTE:\r\n            const rpost = state.posts.filter((post) => post._id === action.payload.postId)[0];\r\n\r\n            state.posts.splice(state.posts.indexOf(rpost, 1));\r\n            if (rpost.points.includes(action.payload.currentUserId)) {\r\n                rpost.points = rpost.points.filter((p => p != action.payload.currentUserId))\r\n            }\r\n            else {\r\n                rpost.points.push(action.payload.currentUserId)\r\n            }\r\n            state.posts.push(rpost)\r\n\r\n            return { ...state };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default postReducer;","import { combineReducers } from 'redux';\r\nimport userReducer from './reducer/userReducer';\r\nimport postReducer from './reducer/postsReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    user: userReducer,\r\n    posts: postReducer,\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    compose(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;","export default __webpack_public_path__ + \"static/media/logo.39c101c5.png\";","import React, { useState } from 'react';\r\nimport logo from '../../Media/logo.png';\r\nimport './Header.css';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nfunction Header(props) {\r\n\r\n    const history = useHistory();\r\n    const [open, setOpen] = useState(false);\r\n    const [open1, setOpen1] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen1(true);\r\n        if (!localStorage.getItem(\"token\")) {\r\n            history.replace('/login');\r\n        }\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen1(false);\r\n    };\r\n\r\n\r\n    const openRegister = () => {\r\n\r\n        localStorage.removeItem(\"token\");\r\n        props.LogoutUser();\r\n        history.push(\"/login\");\r\n    }\r\n\r\n    const openDashboard = () => {\r\n        setOpen(!open)\r\n        history.push(\"dashboard\");\r\n    }\r\n    const openMap = () => {\r\n        history.push(\"map\");\r\n    }\r\n    const openAccount = () => {\r\n        setOpen(!open)\r\n        history.push(\"account\");\r\n    }\r\n    const openHome = () => {\r\n        setOpen(!open)\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"header_main\">\r\n            <div className=\"header_top\">\r\n                <img className=\"logo\" src={logo} alt=\"logo\" />\r\n                <Link style={{ textDecoration: \"none\" }} to=\"/\">\r\n                    <h2>Food Waste</h2>\r\n                </Link>\r\n            </div>\r\n            <div className={open ? \"header_middle_open\" : \"header_middle\"}>\r\n                <a onClick={openHome}>\r\n                    <p>Home</p>\r\n                </a>\r\n                <a onClick={openDashboard}>\r\n                    <p>Dashboard</p>\r\n                </a>\r\n                {\r\n                    localStorage.getItem(\"token\") &&\r\n                    <a onClick={openAccount}>\r\n                        <p>Account</p>\r\n                    </a>\r\n                }\r\n\r\n                <a onClick={openMap}>\r\n                    <p>Maps</p>\r\n                </a>\r\n                <>\r\n                    <button onClick={handleClickOpen} className={open ? \"mob_sign_in_button\" : \"des_sign_in_button\"}>\r\n                        {localStorage.getItem(\"token\") ? \"Log out\" : \"Connect with us\"}\r\n                    </button>\r\n                </>\r\n            </div>\r\n            <div className=\"header_bottom\">\r\n                <button onClick={handleClickOpen} className=\"sign_in_button\">\r\n                    {localStorage.getItem(\"token\") ? \"Log out\" : \" Connect with us\"}\r\n                </button>\r\n                <i onClick={() => setOpen(!open)} className={!open ? \"fa fa-bars\" : \"fa fa-bars open\"}></i>\r\n            </div>\r\n            <Dialog\r\n                open={open1}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\"><b>Food Waste Management</b></DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Are you sure to logout form this website??\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        cancel\r\n                    </Button>\r\n                    <Button onClick={openRegister} color=\"primary\" autoFocus>\r\n                        logout\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","export default __webpack_public_path__ + \"static/media/nofoodwaste.9f99245e.png\";","export default __webpack_public_path__ + \"static/media/about_us_img.d5e1aa97.jpg\";","export default __webpack_public_path__ + \"static/media/helpingHands.e989a302.jpg\";","export default __webpack_public_path__ + \"static/media/mission.a6e7a167.jpg\";","export default __webpack_public_path__ + \"static/media/contact.891d34e8.png\";","export default __webpack_public_path__ + \"static/media/meWink.7981e269.png\";","import React, { useState, useRef } from 'react';\r\nimport './Home.css'\r\nimport nofoodwaste from '../../Media/nofoodwaste.png'\r\nimport aboutUsImg from '../../Media/about_us_img.jpg'\r\nimport helpingHands from '../../Media/helpingHands.jpg'\r\nimport mission from '../../Media/mission.jpg'\r\nimport contactUs from '../../Media/contact.png'\r\nimport { useHistory } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Axios from 'axios';\r\nimport meWink from '../../Media/meWink.png';\r\n\r\n\r\n\r\nfunction Home(props) {\r\n    const history = useHistory();\r\n    const [first_name, setFirst_name] = useState(\"\")\r\n    const [full_name, setFull_name] = useState(\"\")\r\n    const [desc, setDesc] = useState(\"\");\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        setOpen(false);\r\n    };\r\n\r\n    let first_name_ref = useRef();\r\n    let full_name_ref = useRef();\r\n    let desc_ref = useRef();\r\n    let snackRef = useRef();\r\n    let btnRef = useRef();\r\n\r\n\r\n\r\n    const handleSubmit = () => {\r\n        if (first_name.trim().length < 2) {\r\n            first_name_ref.current.style.border = \"2px  solid red\";\r\n            setFirst_name(\"\");\r\n            return\r\n        }\r\n        if (full_name.trim().length < 2) {\r\n            full_name_ref.current.style.border = \"2px  solid red\";\r\n            setFull_name(\"\");\r\n            return\r\n        }\r\n        if (desc.trim().length < 2) {\r\n            desc_ref.current.style.border = \"2px  solid red\";\r\n            setDesc(\"\");\r\n            return\r\n        }\r\n\r\n        btnRef.current.innerHTML = \"Sending...\"\r\n\r\n        Axios.post(\"https://food-waste-management.herokuapp.com/api/post/mail\",\r\n            {\r\n                frommail: \"protfoliobala@gmail.com\",\r\n                password: \"Protfolio@99\",\r\n                tomail: \"kamandlabalashekhar@gmail.com\",\r\n                Subject: `<h1>${first_name} </h1> send you a message`,\r\n                Body: `Name : <h2>${first_name} </h2> <br/> Email : <h2>${full_name}</h2> <br/> description : <h2>${desc}</h2>`,\r\n            })\r\n            .then(\r\n                (response) => {\r\n                    btnRef.current.innerHTML = \"Submit\"\r\n                    if (response.data.msg === 'success') {\r\n\r\n                        snackRef.current.style.display = \"flex\";\r\n                        setTimeout(() => {\r\n                            snackRef.current.style.display = \"none\";\r\n                        }, 3000)\r\n                        setFirst_name(\"\");\r\n                        setFull_name(\"\");\r\n                        setDesc(\"\");\r\n                    } else if (response.data.msg === 'fail') {\r\n\r\n                    }\r\n                }\r\n            )\r\n\r\n\r\n    }\r\n    const openDonatePage = () => {\r\n        if (!localStorage.getItem(\"token\")) {\r\n            handleClick();\r\n            return;\r\n        }\r\n        history.push('donate')\r\n    }\r\n\r\n    const pushToLoginPage = () => {\r\n        history.replace('/login');\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        < div >\r\n            {/* first look start */}\r\n            < img className=\"bg_img\" src=\"https://static.vecteezy.com/system/resources/previews/001/555/346/non_2x/people-donating-sanitary-items-during-quaratine-time-scenery-free-vector.jpg\" alt=\"bg-img\" />\r\n\r\n            <div className=\"home-container\">\r\n                <div className=\"home-container-logo\">\r\n                    <img src={nofoodwaste} alt=\"nofoodwaste\" />\r\n                </div>\r\n                <div data-aos=\"fade-left\" className=\"home-container-details\">\r\n                    <h1>Feed the Hungry</h1>\r\n                    <h4>If you can't feed <b>HUNDRED</b> then just feed <b>ONE</b></h4>\r\n                    <button onClick={openDonatePage} className=\"home-donate-buttton\">Donate</button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* first look end */}\r\n\r\n            {/* about us start */}\r\n\r\n            <div id=\"about_us\" className=\"about_us_container\">\r\n                <div data-aos=\"fade-right\" className=\"about_us_left\">\r\n                    <h2>ABOUT US</h2>\r\n                   <br />\r\n                    <p>Waste management is one of the main concerns with our environment which impacts the health of our society. A significant amount of waste disposed by people are organic material. Kitchen wastes like food scraps disposed by families and restaurants, are becoming in large amounts and the natural capacity of the environment cannot assimilate them. </p>\r\n                </div>\r\n                <div data-aos=\"fade-left\" className=\"about_us_right\">\r\n                    <img src={aboutUsImg} alt=\"about_us_img\" className=\"about_us_img\" />\r\n                </div>\r\n            </div>\r\n\r\n            {/* about us end */}\r\n\r\n            {/* helping hands start */}\r\n\r\n            <div className=\"helping_hands\">\r\n                <img src={helpingHands} alt=\"bg_img\" className=\"helping_hands_bg_img\" />\r\n                <div data-aos=\"zoom-out-down\" className=\"helping_hands_main\">\r\n                    <h2 className=\"centerp\">Welcome to server Needy</h2>\r\n                    <br />\r\n                    <p className=\"centerp\">\r\n                        This website is a Registered Non-Profitable and Non-Religious Social Service Oraganisation. We work 24/7 to serve poor and needy. Our passion remains in feeding the hungry. We offer help whole theartedly to the needy.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n            {/* helping hands end */}\r\n\r\n            {/* our mission start */}\r\n            <div className=\"mission\">\r\n                <div data-aos=\"fade-right\" className=\"mission_left\">\r\n                    <img src={mission} alt=\"mission_img\" className=\"mission_img\" />\r\n                </div>\r\n                <div data-aos=\"fade-left\" className=\"mission_right\">\r\n                    <h2 className=\"centerp\">OUR MISSION</h2>\r\n                    <br />\r\n                    <p className=\"centerp\">Waste management is one of the main concerns with our environment which impacts the health of our society. A significant amount of waste disposed by people are organic material. Kitchen wastes like food scraps disposed by families and restaurants, are becoming in large amounts and the natural capacity of the environment cannot assimilate them. </p>\r\n                </div>\r\n            </div>\r\n            {/* our mission end */}\r\n\r\n            {/* contact us start */}\r\n            <div className=\"contact_us\">\r\n                \r\n                <div className=\"contact_us_main\">\r\n                <h2 >Contact us</h2> <br />\r\n                <p>Waste management is one of the main concerns with our environment which impacts the health of our society.</p><br />\r\n                    <form onSubmit={(e) => { e.preventDefault(); handleSubmit() }} className=\"contact_us_form\">\r\n                        <label>Name :</label><br />\r\n                        <input\r\n                            ref={first_name_ref}\r\n                            className=\"first_name\"\r\n                            value={first_name}\r\n                            onChange={(e) => {\r\n                                first_name_ref.current.style.border = \"none\";\r\n                                setFirst_name(e.target.value)\r\n                            }}\r\n                            type=\"text\"\r\n                            required />\r\n                        <br /><br />\r\n                        <label>Email :</label><br />\r\n                        <input\r\n                            ref={full_name_ref}\r\n                            className=\"full_name\"\r\n                            value={full_name}\r\n                            onChange={(e) => {\r\n                                full_name_ref.current.style.border = \"none\";\r\n                                setFull_name(e.target.value)\r\n                            }}\r\n                            type=\"email\"\r\n                            required />\r\n                        <br /><br />\r\n                        <label>Description :</label><br />\r\n                        <textarea\r\n                            style={{\r\n                                resize: \"vertical\",\r\n                                maxHeight: \"200px\",\r\n                                minHeight: \"30px\"\r\n                            }}\r\n                            ref={desc_ref}\r\n                            value={desc}\r\n                            onChange={(e) => {\r\n                                desc_ref.current.style.border = \"none\"\r\n                                setDesc(e.target.value)\r\n                            }}\r\n                            type=\"text\"\r\n                            required\r\n                            rows=\"3\">\r\n                        </textarea>\r\n                        <button ref={btnRef} type=\"submit\" className=\"contact_submit\"> Submit</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            {/* contact us end */}\r\n\r\n            {/* footer Start */}\r\n            <div style={{ textAlign: \"center\", backgroundColor: \"#84e22b\", color: \"white\" }}>\r\n                <p>Save Lives, Share Foods</p>\r\n            </div>\r\n            {/* footer end */}\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                message=\"Please Login to Donate\"\r\n                action={\r\n                    <React.Fragment>\r\n                        <Button color=\"secondary\" size=\"small\" onClick={pushToLoginPage}>\r\n                            login\r\n                        </Button>\r\n                        <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n                            <CloseIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </React.Fragment>\r\n                }\r\n            />\r\n            <div ref={snackRef} className=\"snackbar\" id=\"move\">\r\n                <img src={meWink} alt=\"\" />\r\n                <div>Hey! We got your message.<br />We will get back to you ASAP.</div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react'\r\nimport './Register.css';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n    Backdrop,\r\n    CircularProgress,\r\n} from '@material-ui/core';\r\n\r\nexport default function Register(props) {\r\n\r\n    let history = useHistory();\r\n\r\n    const [signInpanelOpened, setSignInpanelOpened] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n\r\n    const [remail, setrEmail] = useState(\"\");\r\n    const [rpassword, setrPassword] = useState(\"\");\r\n    const [rname, setrName] = useState(\"\");\r\n    const [loading, setLoading] = useState(false)\r\n\r\n\r\n\r\n\r\n    const openSignUpPanel = () => {\r\n        setSignInpanelOpened(\"right-panel-active\");\r\n    }\r\n\r\n    const openSignInPanel = () => {\r\n        setSignInpanelOpened(\"\");\r\n    }\r\n\r\n    const signInUser = async () => {\r\n        setLoading(true);\r\n        const Data = {\r\n            password,\r\n            email\r\n        }\r\n        props.LoginUser(Data, () => {\r\n            props.LoadUser(() => {\r\n                setLoading(false);\r\n                console.log(\"user loaded\");\r\n            });\r\n            props.LoadPosts(() => {\r\n                setLoading(false);\r\n                console.log(\"posts loaded\")\r\n            });\r\n            history.replace('/');\r\n        })\r\n\r\n\r\n\r\n    }\r\n\r\n    const signUpUser = async () => {\r\n        const Data = {\r\n            name: rname,\r\n            email: remail,\r\n            password: rpassword\r\n        }\r\n        props.signupUser(Data, () => {\r\n            props.LoadUser(() => {\r\n                console.log(\"user loaded\");\r\n            });\r\n            props.LoadPosts(() => {\r\n                console.log(\"posts loaded\")\r\n            });\r\n            history.replace('/');\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"register-wrapper\">\r\n            <div className=\"Register-container\">\r\n                <div className={`container ${signInpanelOpened}`}>\r\n                    <div className=\"form-container sign-up-container\">\r\n                        <form onSubmit={(e) => { e.preventDefault(); signUpUser() }}>\r\n                            <h1 className=\"create_account\">Create Account</h1>\r\n                            <div className=\"social-container\">\r\n                                <a href=\"#\" className=\"social\"><i className=\"fab fa-facebook-f\"></i></a>\r\n                                <a href=\"#\" className=\"social\"><i className=\"fab fa-google-plus-g\"></i></a>\r\n                                <a href=\"#\" className=\"social\"><i className=\"fab fa-linkedin-in\"></i></a>\r\n                            </div>\r\n                            <span>or use your email for registration</span>\r\n                            <input\r\n                                value={rname}\r\n                                onChange={(e) => setrName(e.target.value)}\r\n                                type=\"text\"\r\n                                placeholder=\"Name\" />\r\n                            <input\r\n                                value={remail}\r\n                                onChange={(e) => setrEmail(e.target.value)}\r\n                                type=\"email\"\r\n                                placeholder=\"Email\" />\r\n                            <input\r\n                                value={rpassword}\r\n                                onChange={(e) => setrPassword(e.target.value)}\r\n                                type=\"password\"\r\n                                placeholder=\"Password\" />\r\n                            <button type=\"submit\">Sign Up</button>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"form-container sign-in-container\">\r\n                        <form onSubmit={(e) => { e.preventDefault(); signInUser() }}>\r\n                            <h1>Sign in</h1>\r\n                            <div className=\"social-container\">\r\n                                <a href=\"#\" className=\"social\"><i className=\"fab fa-facebook-f\"></i></a>\r\n                                <a href=\"#\" className=\"social\"><i className=\"fab fa-google-plus-g\"></i></a>\r\n                                <a href=\"#\" className=\"social\"><i className=\"fab fa-linkedin-in\"></i></a>\r\n                            </div>\r\n                            <span>or use your account</span>\r\n                            <input\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                                type=\"email\"\r\n                                placeholder=\"Email\" />\r\n                            <input\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                type=\"password\"\r\n                                placeholder=\"Password\" />\r\n                            <a href=\"#\">Forgot your password?</a>\r\n                            <button type=\"submit\">Sign In</button>\r\n                        </form>\r\n                    </div>\r\n\r\n                    {/* ignore just for animation pupose */}\r\n                    <div className=\"overlay-container\">\r\n                        <div className=\"overlay\">\r\n                            <div className=\"overlay-panel overlay-left\">\r\n                                <h1>Welcome Back!</h1>\r\n                                <p>To keep connected with us please login with your personal info</p>\r\n                                <button onClick={openSignInPanel} className=\"ghost\">Sign In</button>\r\n                            </div>\r\n                            <div className=\"overlay-panel overlay-right\">\r\n                                <h1>Hello, Friend!</h1>\r\n                                <p>Enter your personal details and start journey with us</p>\r\n                                <button onClick={openSignUpPanel} className=\"ghost\">Sign Up</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* ignore just for animation pupose */}\r\n                    <Backdrop\r\n                        style={{ zIndex: \"1600\" }}\r\n                        open={loading} >\r\n                        <CircularProgress color=\"primary\" />\r\n                    </Backdrop>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport './Post.css'\r\nimport { autoPlay } from 'react-swipeable-views-utils';\r\nimport { format } from 'timeago.js'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport SwipeableViews from 'react-swipeable-views';\r\n\r\n\r\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\r\n\r\nfunction Post(props) {\r\n\r\n    const [buttonText, setButtonText] = useState(\"Pick Me\");\r\n    const [activeStep, setactiveStep] = useState(0);\r\n    const [vote, setVote] = useState(\"\");\r\n    const handleStepChange = (step) => {\r\n        setactiveStep(step);\r\n\r\n    }\r\n\r\n    const history = useHistory();\r\n    const openMaps = () => {\r\n        history.push('map', { fromPost: true, id: props.post?._id, lat: parseInt(props.post?.lat), lon: parseInt(props.post?.lon) });\r\n    }\r\n\r\n    return (\r\n        <div data-aos=\"fade-up\" className=\"post-container\">\r\n            <div className=\"post-container-details\">\r\n                <div>\r\n                    <p className=\"posted_on\">posted on - {format(props.post?.createdAt)}</p>\r\n\r\n                    <div className=\"posted_by_user\">\r\n                        <img src={props.post?.postedBy?.image} />\r\n                        <h4>{props.post?.postedBy?.name}</h4>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"post_availability\">\r\n                        <b>Description : </b>{props.post.description}\r\n                    </div>\r\n                    {/* tabel */}\r\n\r\n                    <div>\r\n                        <br />\r\n                        <TableContainer className=\"table\" component={Paper}>\r\n                            <Table aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"center\"><b>Food Item</b></TableCell>\r\n                                        <TableCell align=\"center\"><b>Availability</b> </TableCell>\r\n                                        <TableCell align=\"center\"><b>Spoils_in_hrs</b></TableCell>\r\n                                        <TableCell align=\"center\"><b>Bio_Gas</b></TableCell>\r\n                                        <TableCell align=\"center\"><b>Food_Donate</b></TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {props.post.fooditems.map((row, index) => (\r\n                                        Date.parse(props.post?.updatedAt) / 1000 + parseInt(row.spoil_in_hrs) * 60 * 60 < (new Date().getTime() / 1000)\r\n                                            ? <TableRow key={index}>\r\n                                                <TableCell align=\"center\">{row.item_name}</TableCell>\r\n                                                <TableCell align=\"center\">{row.availability}kgs</TableCell>\r\n                                                <TableCell align=\"center\" style={{ color: \"red\" }}>spoiled {Math.floor(((new Date().getTime() / 1000) - (Date.parse(props.post?.updatedAt) / 1000 + parseInt(row.spoil_in_hrs) * 60 * 60)) / (60 * 60))}hrs ago</TableCell>\r\n                                                <TableCell align=\"center\">{row.Bio_Gas}</TableCell>\r\n                                                <TableCell align=\"center\">{row.Food_Donate}</TableCell>\r\n                                            </TableRow>\r\n                                            :\r\n                                            <TableRow key={row.name}>\r\n                                                <TableCell align=\"center\">{row.item_name}</TableCell>\r\n                                                <TableCell align=\"center\">{row.availability}kgs</TableCell>\r\n                                                <TableCell align=\"center\"><span style={{ color: \"green\" }}>{row.spoil_in_hrs}hrs</span></TableCell>\r\n                                                <TableCell align=\"center\">{row.item_name}</TableCell>\r\n                                                <TableCell align=\"center\">{row.Food_Donate}</TableCell>\r\n                                            </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        <br />\r\n                    </div>\r\n\r\n                    {/* <div className=\"post_loc\">\r\n                        <b>Country : </b>{props.post.country}\r\n                    </div>\r\n                    <div className=\"post_loc\">\r\n                        <b>city : </b>{props.post.city}\r\n                    </div> */}\r\n                    <div className=\"post_loc\">\r\n                        <b>Address : </b>{props.post.address}\r\n                    </div>\r\n                    <div className=\"post_remined\">\r\n\r\n                        <b>Other Details :</b>{props.post.any_other}\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                </div>\r\n                <div className=\"post_button\">\r\n                    {\r\n                        !props.myPosts ?\r\n                            <>\r\n                                <button className=\"req_now_btn d\" onClick={() => {\r\n                                    props.upVote(props?.post?._id, props.currentUser?._id,)\r\n                                }} >\r\n                                    {\r\n                                        !props.post?.points?.includes(props.currentUser?._id) ? \"Add Reward\" : \"Reward added\"\r\n                                    }\r\n                                </button>\r\n                                <button className=\"map_req_now_btn\" onClick={openMaps}>\r\n                                    show on map\r\n                                </button>\r\n                                <button className=\"di_req_now_btn\">\r\n                                    <a target=\"_blank\" href={`https://www.google.com/maps/search/?api=1&query=${props.post?.address}`}>show directions</a>  \r\n                                </button>\r\n                                <button\r\n                                   type=\"submit\" className=\"di_req_now_btn\"\r\n                                   onClick={() => {\r\n                                   setButtonText(\"Picked\"); }}>\r\n                                 {buttonText}\r\n                               </button>                  \r\n                            </>\r\n                            :\r\n                            <div className=\"upost_button\">\r\n                                <button onClick={() => history.push('/donate', props.post)} className=\"eureq_now_btn\">\r\n                                    Edit</button>\r\n                                <button onClick={() => props.DeletePost(props?.post?._id)} className=\"dureq_now_btn\">\r\n                                    Delete</button>\r\n\r\n                            </div>\r\n                    }\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"post-container-img\">\r\n                {\r\n                    props.post?.images?.length === 1 ?\r\n\r\n                        <img\r\n                            className=\"post-container-img-img\"\r\n                            src={props.post?.images[0]}\r\n                            alt=\"\" /> :\r\n\r\n                        <AutoPlaySwipeableViews\r\n                            className=\"ImageGallery\"\r\n                            axis={'x'}\r\n                            index={activeStep}\r\n                            onChangeIndex={handleStepChange}\r\n                            enableMouseEvents\r\n                        >\r\n                            {props?.post?.images.map((step, index) => (\r\n\r\n                                <div\r\n                                    style={{\r\n                                        overflow: \"hidden\",\r\n                                        width: \"100%\",\r\n                                        height: \"100%\",\r\n                                    }}\r\n                                    key={index}\r\n                                >\r\n                                    {Math.abs(activeStep - index) <= props?.post?.images.length ? (\r\n                                        <img\r\n                                            style={{\r\n                                                overflow: \"hidden\",\r\n                                                width: \"100%\",\r\n                                                height: \"100%\",\r\n                                                objectFit: \"cover\"\r\n                                            }}\r\n                                            src={step}\r\n                                            alt=\"\" />\r\n                                    )\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </div>\r\n                            ))}\r\n                        </AutoPlaySwipeableViews>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","import React, {Fragment, useEffect } from 'react';\r\nimport './Dashboard.css';\r\nimport { useHistory } from 'react-router-dom'\r\nimport Post from '../../components/Post/Post';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\r\n\r\nfunction Dashboard(props) {\r\n    const history = useHistory();\r\n    const anchorRef = React.useRef();\r\n    const openDonate = () => {\r\n        history.push('donate');\r\n\r\n    }\r\n    const [open, setOpen] = React.useState(false);\r\n    const [sortbyloc, setsortbyloc] = React.useState(false);\r\n    const [inputval, setinputval] = React.useState(\"\");\r\n    const [filter, setfilter] = React.useState(\"Food\")\r\n    const [userCurrentlocation, setuserCurrentlocation] = React.useState({ latitude: 0, longitude: 0 });\r\n\r\n\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current?.contains(event?.target)) {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    function handleListKeyDown(event) {\r\n        if (event.key === 'Tab') {\r\n            event.preventDefault();\r\n            setOpen(false);\r\n        }\r\n    }\r\n\r\n    // return focus to the button when we transitioned from !open -> open\r\n    const prevOpen = React.useRef(open);\r\n    React.useEffect(() => {\r\n        if (prevOpen.current === true && open === false) {\r\n            anchorRef.current.focus();\r\n        }\r\n\r\n        prevOpen.current = open;\r\n    }, [open]);\r\n\r\n    React.useEffect(async () => {\r\n\r\n        await navigator.geolocation.getCurrentPosition(\r\n            position => {\r\n                setuserCurrentlocation({\r\n                    latitude: position.coords.latitude,\r\n                    longitude: position.coords.longitude\r\n                })\r\n            },\r\n            err => console.log(err)\r\n        );\r\n\r\n    }, [])\r\n    const setCurrentFilter = (e, fil) => {\r\n        setfilter(fil);\r\n        handleClose(e);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            {\r\n                props.posts?.posts?.length === 0 ? <div style={{ marginTop: \"20px\", textAlign: \"center\" }}>No Posts found</div> :\r\n                    <div className=\"dashboard\">\r\n\r\n                        <div className=\"dashboard_search_location\">\r\n                            <div className=\"dashboard_search\">\r\n                                <input\r\n\r\n                                    value={inputval}\r\n                                    onChange={(e) => setinputval(e.target.value)} \r\n                                    placeholder={`search for ${filter}`} type=\"search\" required />\r\n                                <img ref={anchorRef}\r\n                                    onClick={handleToggle}\r\n                                    className=\"filterIcon\"\r\n                                    src=\"https://cdn.icon-icons.com/icons2/2368/PNG/512/filter_icon_143777.png\" alt=\"filter\" />\r\n                            </div>\r\n\r\n                            <div className=\"dashboard_location\">\r\n                                <button onClick={() => setsortbyloc(!sortbyloc)}>{!sortbyloc ? \r\n                                <>Location<MyLocationIcon style={{ marginLeft: \"5px\" }} /></> : \r\n                                <>Sort by time<ScheduleIcon style={{ marginLeft: \"5px\" }} /></>}</button>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"dashboard_posts\">\r\n\r\n                            {\r\n                                props.posts?.posts?.sort((a, b) => {\r\n                                    if (sortbyloc) {\r\n                                        const x1 = parseInt(a.lat), y1 = parseInt(a.lon);\r\n                                        const x2 = parseInt(b.lat), y2 = parseInt(b.lon);\r\n                                        const x3 = userCurrentlocation.latitude, y3 = userCurrentlocation.longitude;\r\n\r\n                                        const d1 = Math.sqrt((x1 - x3) * (x1 - x3) + (y1 - y3) * (y1 - y3));\r\n                                        const d2 = Math.sqrt((x2 - x3) * (x2 - x3) + (y2 - y3) * (y2 - y3));\r\n\r\n                                        return d1 - d2;\r\n                                    }\r\n                                    else {\r\n                                        return Date.parse(a.updatedAt) < Date.parse(b.updatedAt);\r\n                                    }\r\n                                })\r\n\r\n                                    .filter((post, index) => {\r\n                                        if (filter === \"Food\") {\r\n                                            const allitems = [];\r\n                                            post.fooditems.map((item) => allitems.push(item.item_name));\r\n                                            post.fooditems.map((item) => allitems.push(item.Bio_Gas));\r\n                                            post.fooditems.map((item) => allitems.push(item.Food_Donate));\r\n\r\n                                            return allitems.toString().includes(inputval);\r\n                                        }\r\n                                        // else if (filter === \"Country\") {\r\n                                        //     return (post.country.includes(inputval))\r\n                                        // }\r\n                                        else {\r\n                                            return (post.postedBy.name.includes(inputval))\r\n\r\n                                        }\r\n                                    }).map((post, index) => (\r\n                                        <Post\r\n                                            currentUser={props.currentUser?.user}\r\n                                            upVote={(postid, currentUserId) => props.upVote(postid, currentUserId)}\r\n                                            key={index}\r\n                                            post={post} />\r\n                                    ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n            }\r\n            <div data-aos=\"zoom-in-down\" data-aos-delay=\"5000\" className=\"float_donate\" onClick={openDonate}>\r\n                <button>Donate</button>\r\n            </div>\r\n\r\n            <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                {({ TransitionProps, placement }) => (\r\n                    <Grow\r\n                        {...TransitionProps}\r\n                        style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n                    >\r\n                        <Paper>\r\n                            <ClickAwayListener onClickAway={handleClose}>\r\n                                <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                                    <MenuItem onClick={(e) => setCurrentFilter(e, \"Food\")}>Food Items</MenuItem>\r\n                                    {/* <MenuItem onClick={(e) => setCurrentFilter(e, \"Country\")}>Country</MenuItem> */}\r\n                                    <MenuItem onClick={(e) => setCurrentFilter(e, \"User\")}>User</MenuItem>\r\n                                    <MenuItem onClick={(e) => setCurrentFilter(e, \"Food\")}>Bio Gas</MenuItem>\r\n                                    <MenuItem onClick={(e) => setCurrentFilter(e, \"Food\")}>Food Donate</MenuItem>\r\n                                </MenuList>\r\n                            </ClickAwayListener>\r\n                        </Paper>\r\n                    </Grow>\r\n                )}\r\n            </Popper>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","export default __webpack_public_path__ + \"static/media/Avatarimg.4ac51028.png\";","import { Paper, TextField, Snackbar } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport './Account.css';\r\nimport Avatarimg from '../../Media/Avatarimg.png';\r\nimport Post from '../../components/Post/Post';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\n\r\nfunction Account(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [image, setImage] = useState(null);\r\n    // const [email, setEmail] = useState(\"\");\r\n    const [nameError, setNameError] = useState(null);\r\n    const [snackOpen, setSnackOpen] = useState(false);\r\n    const [snackText, setSnackText] = useState(\"\");\r\n    const [valid, setValid] = useState(false);\r\n    const [name, setName] = useState(\"\");\r\n    const [imgChange, setImageChange] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n        setImage(props.user?.image);\r\n        setName(props.user?.name);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const uploadImageURL = (item) => {\r\n        try {\r\n            return URL.createObjectURL(item)\r\n        } catch (error) {\r\n            return item\r\n        }\r\n    }\r\n\r\n    const updateProfile = () => {\r\n        if (imgChange) {\r\n            if (name.length < 2) {\r\n                setNameError(\"enter Name\");\r\n                return\r\n            }\r\n            setSnackOpen(true);\r\n            setSnackText(\"Posting...\");\r\n            const data = new FormData();\r\n            data.append('file', image);\r\n            data.append('upload_preset', \"SocialMedia\");\r\n            data.append('cloud_name', \"djqrcbjmu\");\r\n\r\n            fetch(\"\thttps://api.cloudinary.com/v1_1/djqrcbjmu/image/upload\", {\r\n                method: \"post\",\r\n                body: data\r\n            })\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    const Data = {};\r\n                    Data[\"name\"] = name;\r\n                    Data[\"image\"] = data.secure_url;\r\n                    props.updateProfile(Data, () => {\r\n                        setSnackOpen(true);\r\n                        setSnackText(\"Posted yayu\");\r\n                        setImage(null);\r\n                        setName(\"\");\r\n                        setNameError(null);\r\n                        setOpen(false);\r\n                        setSnackOpen(false);\r\n                    });\r\n                })\r\n        }\r\n        else if (valid) {\r\n\r\n            if (name.length < 2) {\r\n                setNameError(\"enter Name\");\r\n                return\r\n            }\r\n\r\n            setSnackOpen(true);\r\n            setSnackText(\"Posting...\");\r\n            const Data = {};\r\n            Data[\"name\"] = name;\r\n            Data[\"image\"] = image;\r\n            props.updateProfile(Data, () => {\r\n                setSnackOpen(true);\r\n                setSnackText(\"Posted yayu\");\r\n                setImage(null);\r\n                setName(\"\");\r\n                setOpen(false);\r\n                setNameError(null);\r\n                setSnackOpen(false);\r\n            });\r\n        } else {\r\n            setOpen(false);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"account_main\">\r\n            <div className=\"account_wrapper\">\r\n                <div className=\"accout_wrapper_left\">\r\n                    <h2>PROFILE</h2>\r\n                    <img className=\"account_profile_img\" src={props.user?.image} alt=\"profile img\" />\r\n                </div>\r\n                <div className=\"accout_wrapper_right\">\r\n                    <h3>{props.user?.email}<EditIcon onClick={() => handleClickOpen()} className=\"edit-icon\" /></h3>\r\n                    <p>{props?.user?.name} earned(<abbr className=\"upvotes\" title=\"Up Votes\">{props.posts?.posts?.filter((post) => {\r\n                        return post.postedBy._id === props.user._id\r\n                    }).reduce((c, d) => c += d.points.length, 0)}</abbr>)rewards</p>\r\n\r\n                </div>\r\n            </div>\r\n            <Paper className='account_paper' elevation={3}>\r\n\r\n                <h3 className=\"my-posts\">{props.posts?.posts?.filter((post) => {\r\n                    return post.postedBy._id === props.user._id\r\n                }).length === 0 ? \"no posts\" : \"My posts\"}</h3>\r\n                <div className=\"account_posts\">\r\n                    {\r\n                        props.posts?.posts?.filter((post) => {\r\n                            return post.postedBy._id === props.user._id\r\n                        }).map((post, index) => (\r\n                            <Post\r\n                                myPosts={true}\r\n                                DeletePost={props.DeletePost}\r\n                                currentUser={props.user}\r\n                                key={index}\r\n                                post={post}\r\n                                username={props.user.name}\r\n                                image={props.user?.image} />\r\n                        ))\r\n                    }\r\n                </div>\r\n                <Dialog\r\n                    style={{ maxWidth: \"500px\", margin: \"auto\" }}\r\n                    open={open}\r\n                    TransitionComponent={Transition}\r\n                    keepMounted\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"alert-dialog-slide-title\"\r\n                    aria-describedby=\"alert-dialog-slide-description\"\r\n                >\r\n                    <form onSubmit={(e) => { e.preventDefault(); updateProfile() }}>\r\n                        <DialogTitle id=\"alert-dialog-slide-title\">Edit Profile</DialogTitle>\r\n                        <DialogContent style={{ padding: \"0px\" }} >\r\n                            <div id=\"alert-dialog-slide-description\">\r\n                                <p style={{ opacity: \"0.7\", padding: \"0px 10px\" }}><b>NOTE: </b>High resolution image takes much to upload, please be patient</p><br />\r\n                                <input style={{ width: \"100%\", margin: \"auto\", paddingLeft: \"10px\" }} type=\"file\" onChange={(e) => { setImage(e.target.files[0]); setValid(true); setImageChange(true) }} /><br /><br />\r\n                                <img width=\"100%\" height=\"200px\" style={{ textAlign: \"center\", padding: \"10px\", objectFit: \"contain\", cursor: \"pointer\" }} alt=\"img\" src={uploadImageURL(image)} />\r\n                                <br /><br />\r\n                                <TextField\r\n                                    style={{ padding: \"0px 10px\" }}\r\n                                    size=\"small\"\r\n                                    required\r\n                                    error={nameError !== null}\r\n                                    helperText={nameError}\r\n                                    label=\"Name\"\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    value={name}\r\n                                    onChange={(e) => { setName(e.target.value); setValid(true) }}\r\n                                />\r\n\r\n                            </div>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button type=\"button\" onClick={handleClose} color=\"primary\">\r\n                                cancel\r\n                            </Button>\r\n                            <Button type=\"submit\" onClick={handleClose} color=\"primary\">\r\n                                Update\r\n                            </Button>\r\n                        </DialogActions>\r\n\r\n                    </form>\r\n                </Dialog>\r\n            </Paper>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={snackOpen}\r\n                autoHideDuration={3000}\r\n                onClose={() => setSnackOpen(false)}\r\n                message={snackText}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Account\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nfunction Auth(props) {\r\n\r\n    let token = localStorage.getItem(\"token\");\r\n\r\n    if (!props.login) {\r\n        if (props.data.user === null)\r\n            return <div>Loading..</div>\r\n        if (token) {\r\n            return props.children\r\n        }\r\n        else {\r\n            return <Redirect to=\"/login\" />\r\n        }\r\n    }\r\n    else {\r\n        if (token) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n        else {\r\n            return props.children;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Auth\r\n","import React, { forwardRef } from 'react';\r\nimport { withRouter } from 'react-router'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport './Donate.css'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\r\n\r\nimport {\r\n    Box,\r\n    Typography,\r\n\r\n    Backdrop,\r\n    CircularProgress,\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MaterialTable from 'material-table';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\nclass AddProduct extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            snakbarmessage: \"\",\r\n            open: false,\r\n            snakbar: false,\r\n            loading: false,\r\n            Description: { error: \"\", value: props.location.state ? props.location?.state?.description : \"\" },\r\n            address: { error: \"\", value: props.location.state ? props.location?.state?.address : \"\" },\r\n            // country: props.location.state ? props.location?.state?.country : \"\",\r\n            // region: props.location.state ? props.location?.state?.region : \"\",\r\n            any_other: { error: \"\", value: props.location.state ? props.location?.state?.any_other : \"\" },\r\n            images: props.location.state ? [...props.location?.state?.images] : [],\r\n            columns: [\r\n                { title: 'item_name', field: 'item_name' },\r\n                { title: 'availability', field: 'availability', type: 'numeric' },\r\n                { title: 'spoil_in_hrs', field: 'spoil_in_hrs', type: 'numeric' },\r\n                { title: 'Bio Gas', field: 'Bio_Gas',type: 'boolean'},\r\n                { title: \"Food Donate\", field: 'Food_Donate',type: 'boolean'},\r\n            \r\n            ],\r\n            data: props.location.state ? [...props.location?.state?.fooditems] : [],\r\n        }\r\n    }\r\n\r\n    handleClose = (event, reason) => {\r\n        this.setState({\r\n            open: false\r\n        })\r\n    };\r\n\r\n    // selectCountry(val) {\r\n    //     this.setState({ country: val });\r\n    // }\r\n\r\n    // selectRegion(val) {\r\n    //     this.setState({ region: val });\r\n    // }\r\n    handleInputChange = (e) => {\r\n\r\n        this.setState({\r\n            [e.target.name]: { error: \"\", value: e.target.value }\r\n        })\r\n    }\r\n\r\n    uploadImageURL = (item) => {\r\n        try {\r\n            return URL.createObjectURL(item)\r\n        } catch (error) {\r\n            return item\r\n        }\r\n    }\r\n\r\n    removeImage = index => {\r\n        let images = this.state.images;\r\n\r\n        let image = images[index];\r\n        images.splice(index, 1)\r\n\r\n        try {\r\n\r\n            if (image.startsWith(\"https\")) {\r\n                //console.log(\"qEDa\");\r\n                this.setState(\r\n\r\n                    this.deleteImage([image], 0, () => {\r\n                        this.setState({\r\n                            images,\r\n                        });\r\n                    })\r\n                );\r\n            }\r\n\r\n        } catch (error) {\r\n            this.setState({\r\n                images,\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            images,\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    eraserData = () => {\r\n        this.setState({\r\n            loading: false\r\n        })\r\n        let y = this.state.images.length;\r\n        this.setState({\r\n            images: [],\r\n            // country: \"\",\r\n            // region: \"\",\r\n            Description: { error: \"\", value: \"\" },\r\n            address: { error: \"\", value: \"\" },\r\n            any_other: { error: \"\", value: \"\" },\r\n            data: [],\r\n        });\r\n        while (y--)\r\n            this.removeImage();\r\n    }\r\n\r\n    checkValidation = (val, msg) => {\r\n\r\n        if (val.value.trim().length === 0) {\r\n            this.setState({\r\n                snakbarmessage: msg,\r\n                open: true\r\n            })\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    savePostData = async () => {\r\n\r\n        if (this.state.images.length < 1) {\r\n            this.setState({\r\n                snakbarmessage: \"select atleast one image\",\r\n                open: true\r\n            })\r\n            return;\r\n        }\r\n        if (this.checkValidation(this.state.Description, \"write some description\"))\r\n            return;\r\n        // if (this.checkValidation(this.state.country, \"select country\"))\r\n        //     return;\r\n        // if (this.checkValidation(this.state.region, \"select region\"))\r\n        //     return;\r\n\r\n        // if (this.state.country.trim().length === 0) {\r\n        //     this.setState({\r\n        //         snakbarmessage: \"select country\",\r\n        //         open: true\r\n        //     })\r\n        //     return;\r\n        // }\r\n        // if (this.state.region.trim().length === 0) {\r\n        //     this.setState({\r\n        //         snakbarmessage: \"select region\",\r\n        //         open: true\r\n        //     })\r\n        //     return;\r\n        // }\r\n        if (this.checkValidation(this.state.address, \"please choose address\"))\r\n            return;\r\n        if (this.state.data.length === 0) {\r\n            this.setState({\r\n                snakbarmessage: \"Add atleast one item\",\r\n                open: true\r\n            })\r\n            return;\r\n        }\r\n\r\n        // perfect place to go\r\n\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        const sdata = {};\r\n        // sdata['images'] = imgUrls;\r\n        // sdata['country'] = this.state.country;\r\n        // sdata['city'] = this.state.region;\r\n        sdata['postedBy'] = this.props.id;\r\n        sdata['lat'] = \"22\";\r\n        sdata['lon'] = \"33\";\r\n        sdata['address'] = this.state.address.value;\r\n        sdata['description'] = this.state.Description.value;\r\n        sdata['any_other'] = this.state.any_other.value;\r\n        sdata['fooditems'] = this.state.data;\r\n        sdata['Bio_Gas'] = this.state.data;\r\n        sdata['Food_Donate'] = this.state.data;\r\n\r\n\r\n\r\n\r\n        if (!this.props.location.state)\r\n            this.props.CreatePosts(this.state.images, sdata, this.eraserData);\r\n        else\r\n            this.props.UpdatePost(this.props.location.state._id, this.props.location.state.images, this.state.images, sdata, this.eraserData);\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Box className=\"Donate\" bgcolor=\"white\" boxShadow={1} p={4} style={{\r\n                maxWidth: \"700px\",\r\n            }}>\r\n\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                    Add product\r\n                </Typography>\r\n\r\n\r\n                <Box display=\"flex\" flexWrap=\"wrap\">\r\n                    {this.state.images.map((item, index) => (\r\n                        <Box key={index} margin=\"12px\">\r\n                            <img\r\n                                src={this.uploadImageURL(item)}\r\n                                style={{ height: \"160px\", width: \"160px\", objectFit: \"cover\" }} />\r\n                            <br />\r\n                            <IconButton\r\n                                aria-label=\"delete\"\r\n                                onClick={e => this.removeImage(index)}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </Box>\r\n                    ))}\r\n                </Box>\r\n\r\n                <input\r\n                    accept=\"image/*\"\r\n                    hidden\r\n                    id=\"contained-button-file\"\r\n                    onChange={(e) => {\r\n\r\n                        // {console.log(this.state.images.length)}\r\n                        if (e.target.files && e.target.files[0]) {\r\n                            let images = this.state.images;\r\n\r\n                            images.push(e.target.files[0]);\r\n                            this.setState({\r\n                                images: images,\r\n                            })\r\n                            e.target.value = null;\r\n                        }\r\n                    }}\r\n                    type=\"file\"\r\n                />\r\n\r\n                <br />\r\n\r\n                <label htmlFor=\"contained-button-file\" className=\"donate-btn\">\r\n                    <span>Add Image</span>\r\n                </label>\r\n\r\n                <br />\r\n                <br />\r\n\r\n                <textarea style={{ width: \"100%\" }}\r\n                    className=\"donate-input\"\r\n                    name=\"Description\"\r\n                    type=\"text\"\r\n                    error={this.state.Description.error}\r\n                    placeholder=\"Description\"\r\n                    onChange={(e) => this.handleInputChange(e)}\r\n                    value={this.state.Description.value}\r\n                />\r\n\r\n\r\n                {/* <div className=\"dropdowns\">  <CountryDropdown\r\n                    className=\"donate-input\"\r\n                    value={this.state.country}\r\n                    onChange={(val) => this.selectCountry(val)} />\r\n                    <RegionDropdown\r\n\r\n                        className=\"donate-input\"\r\n                        country={this.state.country}\r\n                        value={this.state.region}\r\n                        onChange={(val) => this.selectRegion(val)} />\r\n                </div> */}\r\n\r\n                <div className=\"place-wrapper\">\r\n\r\n                    <textarea\r\n                        className=\"donate-input\"\r\n                        name=\"address\"\r\n                        type=\"text\"\r\n                        error={this.state.address.error}\r\n                        placeholder=\"address\"\r\n                        onChange={(e) => this.handleInputChange(e)}\r\n                        value={this.state.address.value}\r\n                    />\r\n                </div>\r\n\r\n                <textarea\r\n                    className=\"donate-input\"\r\n                    style={{ width: \"100%\" }}\r\n                    name=\"any_other\"\r\n                    type=\"text\"\r\n                    error={this.state.any_other.error}\r\n                    placeholder=\"any_other\"\r\n                    onChange={(e) => this.handleInputChange(e)}\r\n                    value={this.state.any_other.value}\r\n                />\r\n                <br />\r\n                <MaterialTable\r\n                    icons={tableIcons}\r\n                    options={{ search: false, paging: false }}\r\n                    title=\"Add Food Items here\"\r\n                    columns={this.state.columns}\r\n                    data={this.state.data}\r\n                    editable={{\r\n                        onRowAdd: newData =>\r\n                            new Promise((resolve, reject) => {\r\n                                setTimeout(() => {\r\n                                    this.setState({\r\n                                        data: [...this.state.data, newData]\r\n                                    })\r\n\r\n                                    resolve();\r\n                                }, 1000)\r\n                            }),\r\n                        onRowUpdate: (newData, oldData) =>\r\n                            new Promise((resolve, reject) => {\r\n                                setTimeout(() => {\r\n                                    const dataUpdate = [...this.state.data];\r\n                                    const index = oldData.tableData.id;\r\n                                    dataUpdate[index] = newData;\r\n                                    this.setState({\r\n                                        data: [...dataUpdate]\r\n                                    })\r\n\r\n                                    resolve();\r\n                                }, 1000)\r\n                            }),\r\n                        onRowDelete: oldData =>\r\n                            new Promise((resolve, reject) => {\r\n                                setTimeout(() => {\r\n                                    const dataDelete = [...this.state.data];\r\n                                    const index = oldData.tableData.id;\r\n                                    dataDelete.splice(index, 1);\r\n                                    this.setState({\r\n                                        data: [...dataDelete]\r\n                                    })\r\n\r\n                                    resolve();\r\n                                }, 1000)\r\n                            }),\r\n                            \r\n                    }}\r\n                />\r\n\r\n                <br />\r\n\r\n                <label className=\"donate-btn1\" onClick={() => this.savePostData()}>\r\n                    <span >Upload</span>\r\n                </label>\r\n\r\n                {/* <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    open={this.state.snakbar}\r\n                    autoHideDuration={1000}\r\n                    onClose={e => this.setState({\r\n                        snakbar: false\r\n                    })}\r\n                    message={this.state.snackbar_error}\r\n                /> */}\r\n\r\n                <Backdrop\r\n                    style={{ zIndex: \"1600\" }}\r\n                    open={this.state.loading} >\r\n                    <CircularProgress color=\"primary\" />\r\n                </Backdrop>\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    open={this.state.open}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.handleClose}\r\n                    message={this.state.snakbarmessage}\r\n                    action={\r\n                        <React.Fragment>\r\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.handleClose}>\r\n                                <CloseIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </React.Fragment>\r\n                    } />\r\n\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(AddProduct);","import React, { useState, useEffect, useRef } from 'react'\r\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\r\nimport { format } from 'timeago.js';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport './Maps.css';\r\n\r\n\r\nexport default function Maps(props) {\r\n    const inputRef = useRef();\r\n    const location = useLocation();\r\n\r\n    const [viewport, setViewport] = useState({\r\n        width: \"100%\",\r\n        height: \"100vh\",\r\n        latitude: 17.41342,\r\n        longitude: 17.41342,\r\n        zoom: 8\r\n    });\r\n    const [foodItems, setfoodItems] = useState([])\r\n    const [searchedvalue, setsearchedvalue] = useState(\"\")\r\n    const [currentState, setcurrentState] = useState(null)\r\n    const [userCurrentlocation, setuserCurrentlocation] = useState({ latitude: 0, longitude: 0 });\r\n    // console.log(userCurrentlocation)\r\n    useEffect(async () => {\r\n\r\n        await navigator.geolocation.getCurrentPosition(\r\n            position => {\r\n                setuserCurrentlocation({\r\n                    latitude: position.coords.latitude,\r\n                    longitude: position.coords.longitude\r\n                })\r\n            },\r\n            err => console.log(err)\r\n        );\r\n\r\n    }, [])\r\n    useEffect(async () => {\r\n        const foodList = [];\r\n        props.data?.posts?.map((post) => {\r\n            const postob = {};\r\n            postob['lat'] = post.lat;\r\n            postob['lon'] = post.lon;\r\n            postob['id'] = post._id;\r\n            postob['address'] = post.address;\r\n            postob['description'] = post.description;\r\n            postob['foods'] = [];\r\n            post.fooditems.map((item) => {\r\n                postob['foods'].push(item.item_name);\r\n            })\r\n            postob['foods'] = postob['foods'].toString();\r\n            foodList.push(postob);\r\n\r\n\r\n        })\r\n        setfoodItems(foodList);\r\n\r\n        if (location.state?.fromPost === true) {\r\n            setViewport({\r\n                ...viewport,\r\n                latitude: location.state.lat,\r\n                longitude: location.state.lon\r\n            });\r\n\r\n            setcurrentState(location.state.id)\r\n        }\r\n        else {\r\n            await navigator.geolocation.getCurrentPosition(\r\n                position => {\r\n                    setViewport({\r\n                        ...viewport,\r\n                        latitude: position.coords.latitude,\r\n                        longitude: position.coords.longitude\r\n                    });\r\n                },\r\n                err => console.log(err)\r\n            );\r\n        }\r\n\r\n\r\n\r\n\r\n    }, [props.data?.posts])\r\n    const handleInputChange = () => {\r\n        setsearchedvalue(inputRef.current.value)\r\n\r\n    }\r\n    const handleMarkerClick = (id, lat, lon) => {\r\n        setcurrentState(id);\r\n        setViewport({\r\n            ...viewport,\r\n            latitude: parseInt(lat),\r\n            longitude: parseInt(lon),\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"map\">\r\n            <div className=\"map-food-items\">\r\n\r\n                {\r\n                    foodItems.filter((food) => food.foods.includes(searchedvalue)).length === 0 && <div style={{ textAlign: \"center\" }}>No Food items found</div>\r\n                }\r\n                {\r\n\r\n                    foodItems.filter((food) => food.foods.includes(searchedvalue)).map((food, index) => {\r\n                        return (<Paper key={index} data-aos=\"fade-right\" className=\"map-food-item\" elevation={4}>\r\n                            <p><b>Address</b> : {food.address}</p>\r\n                            <p><b>Foods</b> : {food.foods}</p>\r\n                            <p><b>Description</b> : {food.description}</p>\r\n                            <div>\r\n                                <button className=\"map-dir-btn\"><a target=\"_blank\" href={`https://www.google.com/maps/search/?api=1&query=${food.address}`}>direction</a></button>\r\n                                <button className=\"map-loc-btn\" onClick={() => handleMarkerClick(food.id, food.lat, food.lon)}>location</button>\r\n                            </div>\r\n                        </Paper>)\r\n                    })\r\n                }\r\n            </div>\r\n            <div className=\"reactMapGl\">\r\n                <ReactMapGL\r\n                    {...viewport}\r\n                    mapStyle=\"mapbox://styles/mapbox/streets-v11\"\r\n                    mapboxApiAccessToken=\"pk.eyJ1Ijoia2FtYW5kbGFiYWxhc2hla2hhciIsImEiOiJja3JiZXJ0MWg0YjdpMndueHlzOHFmMmJhIn0.GK_kdlg4xXcqcdSF8gmDow\"\r\n                    onViewportChange={nextViewport => setViewport(nextViewport)}\r\n                    transitionDuration=\"400\"\r\n\r\n                >\r\n\r\n\r\n                    <Marker latitude={parseInt(userCurrentlocation.latitude)} longitude={parseInt(userCurrentlocation.longitude)}\r\n                        offsetLeft={-12} offsetTop={-5}>\r\n                        <MyLocationIcon style={{\r\n                            cursor: \"pointer\", font: viewport.zoom * 10,\r\n                            color: \"green\"\r\n                        }} />your are here\r\n                    </Marker>\r\n\r\n\r\n\r\n                    {\r\n\r\n                        props.data?.posts?.map((post, i) => {\r\n                            return (\r\n                                <div key={i}>\r\n                                    <Marker latitude={parseInt(post.lat)} longitude={parseInt(post.lon)} offsetLeft={-12} offsetTop={-5}>\r\n                                        <RoomIcon onClick={() => handleMarkerClick(post._id, post.lat, post.lon)} style={{ cursor: \"pointer\", font: viewport.zoom * 10, color: props.id === post.postedBy?._id ? \"blue\" : \"red\" }} />\r\n                                    </Marker>\r\n\r\n                                    {post._id === currentState && <Popup\r\n                                        latitude={parseInt(post.lat)}\r\n                                        longitude={parseInt(post.lon)}\r\n                                        closeButton={true}\r\n                                        onClose={() => setcurrentState(null)}\r\n                                        anchor=\"bottom\" >\r\n                                        <div style={{ zIndex: \"200\" }}>\r\n                                            <span className=\"maptimeago\">{format(post.createdAt)}</span>\r\n                                            <div className=\"mapuser\"><img src={post.postedBy.image} /><p>{post.postedBy.name}</p></div>\r\n\r\n                                            <div style={{ fontSize: \"12px\", marginTop: \"5px\" }}><span style={{ color: \"#FF00FF\" }}>description :</span>  {post.description}</div>\r\n\r\n                                            <div style={{ fontSize: \"12px\", marginTop: \"5px\" }}><span style={{ color: \"#FF00FF\" }}>Address :</span> : {post.address}</div>\r\n                                            <TableContainer style={{ maxWidth: \"350px\" }}>\r\n                                                <Table aria-label=\"simple table\">\r\n                                                    <TableHead>\r\n                                                        <TableRow>\r\n                                                            <TableCell size=\"small\" align=\"center\"><b>Items</b></TableCell>\r\n                                                            <TableCell align=\"center\"><b>quantity</b> </TableCell>\r\n                                                            <TableCell align=\"center\"><b>time</b></TableCell>\r\n                                                            \r\n                                                        </TableRow>\r\n                                                    </TableHead>\r\n                                                    <TableBody>\r\n\r\n                                                        {post.fooditems.map((row, index) => (\r\n                                                            Date.parse(post?.updatedAt) / 1000 + parseInt(row.spoil_in_hrs) * 60 * 60 < (new Date().getTime() / 1000)\r\n                                                                ? <TableRow key={index}>\r\n                                                                    <TableCell align=\"center\">{row.item_name}</TableCell>\r\n                                                                    <TableCell align=\"center\">{row.availability}kgs</TableCell>\r\n                                                                    <TableCell align=\"center\" style={{ color: \"red\" }}>spoiled {Math.floor(((new Date().getTime() / 1000) - (Date.parse(post?.updatedAt) / 1000 + parseInt(row.spoil_in_hrs) * 60 * 60)) / (60 * 60))}hrs ago</TableCell>\r\n                                                                    <TableCell align=\"center\">{row.Bio_Gas}</TableCell>\r\n                                                                    <TableCell align=\"center\">{row.Food_Donate}</TableCell>\r\n                                                                </TableRow>\r\n                                                                :\r\n                                                                <TableRow key={index}>\r\n                                                                    <TableCell align=\"center\">{row.item_name}</TableCell>\r\n                                                                    <TableCell align=\"center\">{row.availability}kgs</TableCell>\r\n\r\n                                                                    <TableCell align=\"center\"><span style={{ color: \"green\" }}>{row.spoil_in_hrs}hrs</span></TableCell>\r\n                                                                    <TableCell align=\"center\">{row.Bio_Gas}</TableCell>\r\n                                                                    <TableCell align=\"center\">{row.Food_Donate}</TableCell>\r\n                                                                </TableRow>\r\n                                                        ))}\r\n                                                    </TableBody>\r\n                                                </Table>\r\n                                            </TableContainer>\r\n                                            <div></div>\r\n\r\n                                        </div>\r\n                                    </Popup>}\r\n\r\n\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n\r\n                    <input placeholder=\"search food items here...\" ref={inputRef} onChange={handleInputChange} className=\"map_search\" type=\"search\" required />\r\n\r\n                </ReactMapGL></div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport Header from '../components/Header/Header';\r\nimport Home from '../components/Home/Home';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom'\r\nimport Register from './Register/Register';\r\nimport Dashboard from './Dashboard/Dashboard';\r\nimport Account from './Account/Account';\r\nimport Auth from '../auth';\r\nimport Donate from './Donate/Donate';\r\nimport Maps from './Maps/Maps'\r\nimport { LoadUser, LogoutUser, LoginUser, signupUser, updateProfile } from '../redux/actions/userAction';\r\nimport { CreatePosts, LoadPosts, DeletePost, UpdatePost, upVote } from '../redux/actions/postsAction';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    Backdrop,\r\n    CircularProgress,\r\n} from '@material-ui/core';\r\n\r\n\r\n\r\nfunction Main(props) {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        props.LoadUser(() => {\r\n            setLoading(false);\r\n        });\r\n        props.LoadPosts(() => {\r\n            setLoading(false);\r\n        });\r\n    }, [])\r\n    return (\r\n\r\n        <div>\r\n            <HashRouter>\r\n                <Switch>\r\n\r\n                    <Route path=\"/\" exact>\r\n                        <Header LogoutUser={() => props.LogoutUser()} />\r\n                        <Home />\r\n                    </Route>\r\n\r\n                    <Route path=\"/login\" exact>\r\n                        <Auth data={props.user} login={true}>\r\n                            <Register\r\n                                LoginUser={(data, onSuccess) => props.LoginUser(data, onSuccess)}\r\n                                signupUser={(data, onSuccess) => props.signupUser(data, onSuccess)}\r\n                                LoadUser={props.LoadUser}\r\n                                LoadPosts={props.LoadPosts} />\r\n                        </Auth>\r\n                    </Route>\r\n\r\n                    <Route path=\"/dashboard\" exact>\r\n                        <Header LogoutUser={() => props.LogoutUser()} />\r\n                        <Dashboard\r\n                            currentUser={props.user}\r\n                            upVote={(postid, currentUserId) => props.upVote(postid, currentUserId)}\r\n                            posts={props.posts}\r\n                            user={props.user} />\r\n                    </Route>\r\n                    <Route path=\"/account\" exact>\r\n                        <Auth data={props.user}>\r\n                            <Header LogoutUser={() => props.LogoutUser()} />\r\n                            <Account\r\n                                updateProfile={props.updateProfile}\r\n                                DeletePost={props.DeletePost}\r\n                                posts={props.posts}\r\n                                user={props.user?.user} />\r\n                        </Auth>\r\n                    </Route>\r\n\r\n                    <Route path=\"/donate\" exact>\r\n                        <Auth data={props.user}>\r\n                            <Header LogoutUser={() => props.LogoutUser()} />\r\n                            <Donate UpdatePost={props.UpdatePost} CreatePosts={props.CreatePosts} id={props.user?.user?._id} />\r\n                        </Auth>\r\n                    </Route>\r\n\r\n                    <Route path=\"/map\" exact>\r\n                        <Auth data={props.user}>\r\n                            <Maps data={props.posts} id={props.user?.user?._id} />\r\n                        </Auth>\r\n                    </Route>\r\n\r\n                </Switch>\r\n                <Backdrop\r\n                    style={{ zIndex: \"1600\" }}\r\n                    open={loading} >\r\n                    <CircularProgress color=\"primary\" />\r\n                </Backdrop>\r\n            </HashRouter>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        user: state.user,\r\n        posts: state.posts,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateProfile: (data, onSuccess) => dispatch(updateProfile(data, onSuccess)),\r\n        LoadUser: (onSuccess) => dispatch(LoadUser(onSuccess)),\r\n        LoadPosts: (onSuccess) => dispatch(LoadPosts(onSuccess)),\r\n        DeletePost: (id) => dispatch(DeletePost(id)),\r\n        LoginUser: (data, onSuccess) => dispatch(LoginUser(data, onSuccess)),\r\n        signupUser: (data, onSuccess) => dispatch(signupUser(data, onSuccess)),\r\n        LogoutUser: () => dispatch(LogoutUser()),\r\n        upVote: (postid, currentUserId) => dispatch(upVote(postid, currentUserId)),\r\n        UpdatePost: (id, pi, images, data, eraserData) => dispatch(UpdatePost(id, pi, images, data, eraserData)),\r\n        CreatePosts: (images, data, eraserData) => dispatch(CreatePosts(images, data, eraserData)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main)","import {\r\n    LOAD_USER,\r\n    LOGIN_USER,\r\n    SIGNUP_USER,\r\n    LOGOUT_USER,\r\n    ERROR,\r\n    UP_VOTE,\r\n    UPDATE_USER\r\n} from '../actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const LoginUser = (data, onSuccess) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const user = await axios.post('https://food-waste-management.herokuapp.com/api/auth/login', data);\r\n            dispatch({ type: LOGIN_USER, payload: user.data });\r\n            localStorage.setItem(\"token\", user.data.token);\r\n            onSuccess();\r\n        } catch (err) {\r\n            console.log(err);\r\n            dispatch({ type: ERROR, payload: err.response })\r\n        }\r\n    }\r\n}\r\n\r\nexport const signupUser = (data, onSuccess) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const user = await axios.post('https://food-waste-management.herokuapp.com/api/auth/register', data);\r\n            dispatch({ type: SIGNUP_USER, payload: user.data });\r\n            localStorage.setItem(\"token\", user.data.token);\r\n            onSuccess();\r\n        } catch (err) {\r\n            console.log(err);\r\n            dispatch({ type: ERROR, payload: err.response })\r\n        }\r\n    }\r\n}\r\n\r\nexport const LoadUser = (onSuccess) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let token = localStorage.getItem(\"token\");\r\n            if (!token) {\r\n                dispatch({ type: ERROR, payload: \"token not found\" });\r\n                return;\r\n            }\r\n            const user = await axios.get('https://food-waste-management.herokuapp.com/api/auth/getuser', {\r\n                headers: {\r\n                    \"authentication\": token\r\n                }\r\n            });\r\n            dispatch({ type: LOAD_USER, payload: user.data });\r\n            onSuccess();\r\n        } catch (err) {\r\n            console.log(err)\r\n            dispatch({ type: ERROR, payload: err.response })\r\n        }\r\n    }\r\n}\r\n\r\nexport const LogoutUser = () => {\r\n    return (dispatch, getState) => {\r\n        localStorage.removeItem(\"token\");\r\n        dispatch({ type: LOGOUT_USER });\r\n    }\r\n}\r\n\r\nexport const updateProfile = (data, onSuccess) => {\r\n    return async (dispatch, getstate) => {\r\n        try {\r\n            const token = localStorage.getItem(\"token\");\r\n            const updatedUser = await axios.put('https://food-waste-management.herokuapp.com/api/auth/update_user', data, {\r\n                headers: {\r\n                    \"authentication\": token\r\n                }\r\n            });\r\n            onSuccess();\r\n            dispatch({ type: UPDATE_USER, payload: updatedUser.data })\r\n        } catch (err) {\r\n            console.log(err.response.data);\r\n        }\r\n    }\r\n}\r\n","import {\r\n    CREATE_POST,\r\n    LOAD_POSTS,\r\n    UPDATE_POST,\r\n    DELETE_POST,\r\n    ERROR,\r\n    UP_VOTE\r\n} from '../actionTypes';\r\nimport axios from 'axios'\r\n\r\nexport const LoadPosts = (onSuccess) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const posts = await axios.get('https://food-waste-management.herokuapp.com/api/post/allposts');\r\n            dispatch({ type: LOAD_POSTS, payload: posts.data });\r\n            onSuccess();\r\n        } catch (err) {\r\n            dispatch({ type: ERROR, payload: err.response })\r\n        }\r\n    }\r\n}\r\n\r\nexport const CreatePosts = (images, sdata, eraserData) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        try {\r\n            const imgUrls = [];\r\n            images.map(async (image) => {\r\n                const data = new FormData();\r\n                data.append('file', image);\r\n                data.append('upload_preset', \"SocialMedia\");\r\n                data.append('cloud_name', \"djqrcbjmu\");\r\n                const data1 = await fetch(\"\thttps://api.cloudinary.com/v1_1/djqrcbjmu/image/upload\", {\r\n                    method: \"post\",\r\n                    body: data\r\n                });\r\n                const data2 = await data1.json();\r\n                const url = await data2.secure_url;\r\n                imgUrls.push(url);\r\n                if (imgUrls.length === images.length) {\r\n\r\n                    sdata['images'] = imgUrls;\r\n\r\n                    const fulladdress = sdata['address'];\r\n                    const getLatLangFromAddress = await axios.get(`https://www.mapquestapi.com/geocoding/v1/address?key=iIzTGMTjj6hWGGvsPSShyeDxyifWFnpL&location=${fulladdress}`);\r\n                    const latLng = getLatLangFromAddress.data.results[0].locations[0].latLng;\r\n                    const lat = latLng.lat.toString();\r\n                    const lng = latLng.lng.toString();\r\n\r\n                    sdata['lat'] = lat;\r\n                    sdata['lon'] = lng;\r\n\r\n                    const upload = await axios.post('https://food-waste-management.herokuapp.com/api/post/addpost', sdata, {\r\n                        headers: {\r\n                            'authentication': localStorage.getItem('token')\r\n                        }\r\n                    });\r\n\r\n                    dispatch({ type: CREATE_POST, payload: upload.data })\r\n\r\n                    eraserData();\r\n\r\n\r\n                }\r\n\r\n            });\r\n\r\n        } catch (err) {\r\n            console.log(err.message);\r\n            eraserData();\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport const UpdatePost = (id, pi, images, sdata, eraserData) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        try {\r\n\r\n            const imgUrls = [];\r\n\r\n\r\n            images.map(async (image) => {\r\n                if (typeof image === String) {\r\n                    imgUrls.push(image)\r\n                }\r\n                else {\r\n                    const data = new FormData();\r\n                    data.append('file', image);\r\n                    data.append('upload_preset', \"SocialMedia\");\r\n                    data.append('cloud_name', \"djqrcbjmu\");\r\n                    const data1 = await fetch(\"\thttps://api.cloudinary.com/v1_1/djqrcbjmu/image/upload\", {\r\n                        method: \"post\",\r\n                        body: data\r\n                    });\r\n                    const data2 = await data1.json();\r\n                    const url = await data2.secure_url;\r\n                    imgUrls.push(url);\r\n\r\n                }\r\n                if (imgUrls.length === images.length) {\r\n                    sdata['images'] = imgUrls;\r\n                    const upload = await axios.put(`https://food-waste-management.herokuapp.com/api/post/${id}`, sdata, {\r\n                        headers: {\r\n                            'authentication': localStorage.getItem('token')\r\n                        }\r\n                    });\r\n\r\n                    dispatch({ type: UPDATE_POST, payload: upload.data })\r\n\r\n                    eraserData();\r\n\r\n\r\n                }\r\n\r\n            });\r\n\r\n        } catch (err) {\r\n            console.log(err.message);\r\n            eraserData();\r\n\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const DeletePost = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        try {\r\n            const status = await axios.delete(`https://food-waste-management.herokuapp.com/api/post/${id}`, {\r\n                headers: {\r\n                    'authentication': localStorage.getItem('token')\r\n\r\n                }\r\n            });\r\n            dispatch({\r\n                type: DELETE_POST,\r\n                payload: status.data\r\n            });\r\n        }\r\n        catch (err) {\r\n            console.log(err.message);\r\n        }\r\n\r\n    }\r\n}\r\nexport const upVote = (postId, currentUserId) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const vpvoted = await axios.post('https://food-waste-management.herokuapp.com/api/post/upvote', { id: postId }, {\r\n                headers: {\r\n                    'authentication': localStorage.getItem('token')\r\n\r\n                }\r\n            });\r\n            dispatch({ type: UP_VOTE, payload: { postId, currentUserId } });\r\n\r\n        }\r\n        catch (err) {\r\n            console.log(err.message);\r\n        }\r\n\r\n\r\n\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport './App.css'\r\nimport 'aos/dist/aos.css';\r\nimport AOS from 'aos'\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport Main from './Pages/Main';\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n \r\n\r\n\r\n  useEffect(() => {\r\n    // initialize AOS library\r\n    AOS.init({\r\n      easing: 'ease-in-out-back',\r\n      duration: 1000,\r\n      offset: 0,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n\r\n    <Provider store={store}>\r\n      <Main />\r\n    </Provider>\r\n\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n// import Maps from './Pages/Dashboard/Maps/Maps'\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n    {/* <Maps /> */}\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}